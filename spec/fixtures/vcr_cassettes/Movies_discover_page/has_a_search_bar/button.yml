---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=Sike you thought&page=1&query=Nothing
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Api-Key:
      - Sike you thought
      User-Agent:
      - Faraday v2.3.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Fri, 13 May 2022 02:16:32 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 9cefde3a3c84cc779d3c26a39c2e4430.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - oTenzrBaFCZ2I5OPat7kYTvE_Oj-gMgeOZ3tta_w7-kaCbxXdt2C7A==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 13 May 2022 02:16:32 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=Sike you thought&page=2&query=Nothing
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Api-Key:
      - Sike you thought
      User-Agent:
      - Faraday v2.3.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Fri, 13 May 2022 02:16:32 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 a47d45d25cc354507eae77aba89ca252.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - dz6RMDFEu0_J6u6BZJiKcG4xQogq5qy6LPnxJWC5_r1RFb-IIhBv-g==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 13 May 2022 02:16:32 GMT
recorded_with: VCR 6.1.0
